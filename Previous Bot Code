#pragma config(Sensor, in1,    claw_pot,       sensorPotentiometer)
#pragma config(Sensor, in2,    gyro,           sensorGyro)
#pragma config(Sensor, in3,    power_expander, sensorAnalog)
#pragma config(Sensor, dgtl1,  arm_encoder,    sensorQuadEncoder)
#pragma config(Sensor, dgtl3,  drive_encoder,  sensorQuadEncoder)
#pragma config(Sensor, dgtl6,  ultraSensor,    sensorSONAR_cm)
#pragma config(Motor,  port1,           Left_Drive3,   tmotorVex393HighSpeed_HBridge, openLoop)
#pragma config(Motor,  port2,           Left_Arms,     tmotorVex393HighSpeed_MC29, openLoop)
#pragma config(Motor,  port3,           Right_Arms,    tmotorVex393HighSpeed_MC29, openLoop, reversed)
#pragma config(Motor,  port4,           Left_drive,    tmotorVex393HighSpeed_MC29, openLoop)
#pragma config(Motor,  port5,           Left_drive2,   tmotorVex393HighSpeed_MC29, openLoop)
#pragma config(Motor,  port6,           Right_drive,   tmotorVex393HighSpeed_MC29, openLoop, reversed)
#pragma config(Motor,  port7,           Right_drive2,  tmotorVex393HighSpeed_MC29, openLoop, reversed)
#pragma config(Motor,  port8,           Claw,          tmotorVex393HighSpeed_MC29, openLoop, reversed)
#pragma config(Motor,  port10,          Right_drive3,  tmotorVex393HighSpeed_HBridge, openLoop)
//*!!Code automatically generated by 'ROBOTC' configuration wizard               !!*//

void reverse (int speed)
{
		motor[Left_drive] = -speed;
		motor[Left_drive2] = -speed;
		motor[Left_Drive3] = -speed;
		motor[Right_drive] = -speed;
		motor[Right_drive2] = -speed;
		motor[Right_drive3] = -speed;
}

task main()

{
	int x_axis;
	int y_axis;
	int lift;
	int claw_;
  int sonar_value;


	float a_value = 0.000062;
	float multiplier = 1;

	while(true)//so run this stuff in a loop forever
{
		x_axis = (a_value * (vexRT[Ch1]* vexRT[Ch1]* vexRT[Ch1]));
		y_axis = (a_value * (vexRT[Ch2]* vexRT[Ch2]* vexRT[Ch2]));
		lift  = vexRT[Ch3];

		if(vexRT[Btn5U] == 1)
		{
			claw_ = 127;
		}
		else if(vexRT[Btn5D] == 1)
		{
			claw_ = -127;
		}
		else
		{
			claw_ = -25;
		}


		if(vexRT[Btn6U] == 1)
		{
			multiplier = 0.3;
		}
		else
		{
			multiplier = 1;
		}


		if(vexRT[Btn6D] == 1)
	{
		motor[Claw] = 127;
		wait1Msec(100);
		motor[Right_Arms] = 127;
		motor[Left_Arms] = 127;
		wait1Msec(300);
		motor[Claw] = 0;
		motor[Right_Arms] = 0;
		motor[Left_Arms] = 0;
		wait1Msec(200);
		reverse(127);
		wait1Msec(500);
		reverse(0);
		wait1Msec(200);
}

		sonar_value = SensorValue(ultraSensor);

		if (vexRT[Btn5D] == 1 && sonar_value < 15)
	{
		motor[Right_Arms] = 0;
		motor[Left_Arms] = 0;
		wait1Msec(500);
		claw_ = -127;
		wait1Msec(1000);
		claw_ = 0;
		motor[Right_Arms] = 127;
		motor[Left_Arms] = 127;
		wait1Msec(500);	
	}

		motor[Left_drive] = (y_axis + x_axis) *multiplier;
		motor[Left_drive2] = (y_axis + x_axis) *multiplier;
		motor[Left_Drive3] = (y_axis + x_axis) *multiplier;
		motor[Right_drive] = (y_axis - x_axis) *multiplier;
		motor[Right_drive2] = (y_axis - x_axis) *multiplier;
		motor[Right_drive3] = (y_axis - x_axis) *multiplier;
		motor[Right_Arms] = lift;
		motor[Left_Arms] = lift;
		motor[Claw] = claw_;


}
}


